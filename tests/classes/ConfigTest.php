<?php

ini_set('include_path', ini_get('include_path')
        . PATH_SEPARATOR
        . './'
        . PATH_SEPARATOR
        . '../'
        . PATH_SEPARATOR
        . '../../'
        . PATH_SEPARATOR
);

require_once 'classes/Config.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-23 at 17:52:15.
 */
class ConfigTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Config
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Config;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $this->object = null;
    }

    /**
     * @covers Config::read
     * @todo   Implement testRead().
     */
    public function testRead() {

        $expected = array('app_key' => 'ddsfds'
            , 'user_key' => 'sfds'
            , 'output_file_name' => 'sdfsd.ics'
            , 'timezone' => 'America/Los_Angeles'
            , 'before_period' => '12 month'
            , 'after_period' => '1 month');
        $this->assertEquals($expected, $this->object->read());

        $expected = array('key' => 'value');
        $this->object->setFileName('tests/data/testDummyConfig.ini');
        $this->assertEquals($expected, $this->object->read());

        $this->object->setFileName('tests/data/testReal.ini');
        $expected = array('app_key' => 'appkeyvalue',
            'user_key' => 'userkeyvalue');
        $this->assertEquals($expected, $this->object->read());
    }

    /**
     * @covers Config::write
     * @todo   Implement testWrite().
     */
    public function testWrite() {
        $config = array('app_key' => 'appkeyvalue',
            'user_key' => 'userkeyvalue');
        $this->object->setConfig($config);
        echo getcwd();
        $this->object->setFileName('data/testOutputFile.ini');
        $this->object->write();
        $this->assertEquals($config, $this->object->read());
        unlink($this->object->getFileName());
    }

    /**
     * @covers Config::getParam
     * @todo   Implement testGetParam().
     */
    public function testGetParam() {
        $config = array('app_key' => 'appkeyvalue',
            'user_key' => 'userkeyvalue');
        $this->object->setConfig($config);
        $this->assertEquals('appkeyvalue', $this->object->getParam('app_key'));
        $this->assertEquals('userkeyvalue', $this->object->getParam('user_key'));
    }

    public function testDisplayTimeOptions() {
        $expected = "<option value=\"1 Month\" selected=\"selected\">1 Month</option>
<option value=\"3 Month\">3 Month</option>
<option value=\"6 Month\">6 Month</option>
<option value=\"12 Month\">12 Month</option>
";
        $this->assertEquals($expected, $this->object->displayTimeOptions());
        $expected = "<option value=\"1 Month\">1 Month</option>
<option value=\"3 Month\">3 Month</option>
<option value=\"6 Month\">6 Month</option>
<option value=\"12 Month\" selected=\"selected\">12 Month</option>
";
        $this->assertEquals($expected, $this->object->displayTimeOptions('12 Month'));
    }

}
